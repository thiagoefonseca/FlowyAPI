// <auto-generated />
using System;
using FlowyAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlowyAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250825224827_UsuarioMigration")]
    partial class UsuarioMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlowyAPI.Models.Pagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Humor")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("codDiario")
                        .HasColumnType("int");

                    b.Property<string>("contPagina")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("dtCriacaoPagina")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtExclusaoPagina")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtModificacaoPagina")
                        .HasColumnType("datetime2");

                    b.Property<int>("qtdCaracteresPagina")
                        .HasColumnType("int");

                    b.Property<string>("temaPagina")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("tituloPagina")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_PAGINAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Humor = 1,
                            codDiario = 1,
                            contPagina = "teste 123 123 teste de novo",
                            dtCriacaoPagina = new DateTime(2025, 8, 25, 19, 48, 25, 269, DateTimeKind.Local).AddTicks(311),
                            dtExclusaoPagina = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dtModificacaoPagina = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            qtdCaracteresPagina = 123,
                            temaPagina = "teste",
                            tituloPagina = "Pagina1"
                        });
                });

            modelBuilder.Entity("FlowyAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasDefaultValue("Utilizador");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "thiagoefonseca2007@gmail.com",
                            PasswordHash = new byte[] { 44, 119, 107, 95, 6, 137, 15, 189, 52, 165, 58, 36, 214, 72, 92, 206, 197, 135, 25, 113, 121, 39, 138, 53, 78, 87, 175, 236, 230, 130, 147, 20, 0, 220, 254, 114, 77, 148, 166, 169, 88, 68, 50, 109, 109, 214, 204, 128, 101, 183, 112, 147, 80, 0, 33, 75, 217, 76, 60, 4, 116, 102, 2, 177 },
                            PasswordSalt = new byte[] { 13, 142, 38, 16, 47, 3, 135, 131, 152, 4, 160, 245, 148, 157, 211, 49, 252, 203, 53, 210, 173, 224, 86, 222, 225, 109, 202, 189, 232, 24, 51, 250, 82, 55, 114, 3, 3, 155, 137, 151, 140, 196, 146, 251, 175, 22, 225, 106, 123, 26, 95, 248, 188, 134, 152, 121, 31, 164, 170, 224, 184, 212, 113, 67, 63, 36, 214, 185, 161, 252, 147, 176, 58, 101, 128, 105, 153, 18, 12, 95, 53, 191, 6, 113, 168, 52, 110, 36, 62, 252, 247, 105, 37, 49, 135, 17, 57, 36, 127, 26, 145, 112, 72, 84, 152, 81, 49, 212, 120, 215, 63, 233, 203, 25, 253, 17, 124, 59, 233, 103, 94, 71, 64, 107, 226, 196, 57, 242 },
                            Perfil = "Admin",
                            Username = "UsuarioAdmin"
                        });
                });

            modelBuilder.Entity("FlowyAPI.Models.Pagina", b =>
                {
                    b.HasOne("FlowyAPI.Models.Usuario", "Usuario")
                        .WithMany("Paginas")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FlowyAPI.Models.Usuario", b =>
                {
                    b.Navigation("Paginas");
                });
#pragma warning restore 612, 618
        }
    }
}
